/*
 * Generated by gdbus-codegen 2.32.3. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __SSO_IDENTITY_GEN_H__
#define __SSO_IDENTITY_GEN_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.google.code.AccountsSSO.gSingleSignOn.Identity */

#define TYPE_SSO_IDENTITY (sso_identity_get_type ())
#define SSO_IDENTITY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_SSO_IDENTITY, SsoIdentity))
#define IS_SSO_IDENTITY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_SSO_IDENTITY))
#define SSO_IDENTITY_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_SSO_IDENTITY, SsoIdentityIface))

struct _SsoIdentity;
typedef struct _SsoIdentity SsoIdentity;
typedef struct _SsoIdentityIface SsoIdentityIface;

struct _SsoIdentityIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_add_reference) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_reference);

  gboolean (*handle_get_auth_session) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_method);

  gboolean (*handle_get_info) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_remove) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_remove_reference) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_reference);

  gboolean (*handle_request_credentials_update) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_message);

  gboolean (*handle_sign_out) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_store) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_unnamed_arg0);

  gboolean (*handle_verify_secret) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_secret);

  gboolean (*handle_verify_user) (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_params);

  void (*info_updated) (
    SsoIdentity *object,
    gint arg_unnamed_arg0);

  void (*unregistered) (
    SsoIdentity *object);

};

GType sso_identity_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *sso_identity_interface_info (void);
guint sso_identity_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void sso_identity_complete_request_credentials_update (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    guint unnamed_arg1);

void sso_identity_complete_get_info (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    GVariant *identityInfo);

void sso_identity_complete_get_auth_session (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    const gchar *objectPath);

void sso_identity_complete_verify_user (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    gboolean unnamed_arg1);

void sso_identity_complete_verify_secret (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    gboolean unnamed_arg1);

void sso_identity_complete_remove (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation);

void sso_identity_complete_sign_out (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    gboolean unnamed_arg0);

void sso_identity_complete_store (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    guint unnamed_arg1);

void sso_identity_complete_add_reference (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    gint unnamed_arg1);

void sso_identity_complete_remove_reference (
    SsoIdentity *object,
    GDBusMethodInvocation *invocation,
    gint unnamed_arg1);



/* D-Bus signal emissions functions: */
void sso_identity_emit_unregistered (
    SsoIdentity *object);

void sso_identity_emit_info_updated (
    SsoIdentity *object,
    gint arg_unnamed_arg0);



/* D-Bus method calls: */
void sso_identity_call_request_credentials_update (
    SsoIdentity *proxy,
    const gchar *arg_message,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_request_credentials_update_finish (
    SsoIdentity *proxy,
    guint *out_unnamed_arg1,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_request_credentials_update_sync (
    SsoIdentity *proxy,
    const gchar *arg_message,
    guint *out_unnamed_arg1,
    GCancellable *cancellable,
    GError **error);

void sso_identity_call_get_info (
    SsoIdentity *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_get_info_finish (
    SsoIdentity *proxy,
    GVariant **out_identityInfo,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_get_info_sync (
    SsoIdentity *proxy,
    GVariant **out_identityInfo,
    GCancellable *cancellable,
    GError **error);

void sso_identity_call_get_auth_session (
    SsoIdentity *proxy,
    const gchar *arg_method,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_get_auth_session_finish (
    SsoIdentity *proxy,
    gchar **out_objectPath,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_get_auth_session_sync (
    SsoIdentity *proxy,
    const gchar *arg_method,
    gchar **out_objectPath,
    GCancellable *cancellable,
    GError **error);

void sso_identity_call_verify_user (
    SsoIdentity *proxy,
    GVariant *arg_params,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_verify_user_finish (
    SsoIdentity *proxy,
    gboolean *out_unnamed_arg1,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_verify_user_sync (
    SsoIdentity *proxy,
    GVariant *arg_params,
    gboolean *out_unnamed_arg1,
    GCancellable *cancellable,
    GError **error);

void sso_identity_call_verify_secret (
    SsoIdentity *proxy,
    const gchar *arg_secret,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_verify_secret_finish (
    SsoIdentity *proxy,
    gboolean *out_unnamed_arg1,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_verify_secret_sync (
    SsoIdentity *proxy,
    const gchar *arg_secret,
    gboolean *out_unnamed_arg1,
    GCancellable *cancellable,
    GError **error);

void sso_identity_call_remove (
    SsoIdentity *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_remove_finish (
    SsoIdentity *proxy,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_remove_sync (
    SsoIdentity *proxy,
    GCancellable *cancellable,
    GError **error);

void sso_identity_call_sign_out (
    SsoIdentity *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_sign_out_finish (
    SsoIdentity *proxy,
    gboolean *out_unnamed_arg0,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_sign_out_sync (
    SsoIdentity *proxy,
    gboolean *out_unnamed_arg0,
    GCancellable *cancellable,
    GError **error);

void sso_identity_call_store (
    SsoIdentity *proxy,
    GVariant *arg_unnamed_arg0,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_store_finish (
    SsoIdentity *proxy,
    guint *out_unnamed_arg1,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_store_sync (
    SsoIdentity *proxy,
    GVariant *arg_unnamed_arg0,
    guint *out_unnamed_arg1,
    GCancellable *cancellable,
    GError **error);

void sso_identity_call_add_reference (
    SsoIdentity *proxy,
    const gchar *arg_reference,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_add_reference_finish (
    SsoIdentity *proxy,
    gint *out_unnamed_arg1,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_add_reference_sync (
    SsoIdentity *proxy,
    const gchar *arg_reference,
    gint *out_unnamed_arg1,
    GCancellable *cancellable,
    GError **error);

void sso_identity_call_remove_reference (
    SsoIdentity *proxy,
    const gchar *arg_reference,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sso_identity_call_remove_reference_finish (
    SsoIdentity *proxy,
    gint *out_unnamed_arg1,
    GAsyncResult *res,
    GError **error);

gboolean sso_identity_call_remove_reference_sync (
    SsoIdentity *proxy,
    const gchar *arg_reference,
    gint *out_unnamed_arg1,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_SSO_IDENTITY_PROXY (sso_identity_proxy_get_type ())
#define SSO_IDENTITY_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_SSO_IDENTITY_PROXY, SsoIdentityProxy))
#define SSO_IDENTITY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_SSO_IDENTITY_PROXY, SsoIdentityProxyClass))
#define SSO_IDENTITY_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_SSO_IDENTITY_PROXY, SsoIdentityProxyClass))
#define IS_SSO_IDENTITY_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_SSO_IDENTITY_PROXY))
#define IS_SSO_IDENTITY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_SSO_IDENTITY_PROXY))

typedef struct _SsoIdentityProxy SsoIdentityProxy;
typedef struct _SsoIdentityProxyClass SsoIdentityProxyClass;
typedef struct _SsoIdentityProxyPrivate SsoIdentityProxyPrivate;

struct _SsoIdentityProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  SsoIdentityProxyPrivate *priv;
};

struct _SsoIdentityProxyClass
{
  GDBusProxyClass parent_class;
};

GType sso_identity_proxy_get_type (void) G_GNUC_CONST;

void sso_identity_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SsoIdentity *sso_identity_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
SsoIdentity *sso_identity_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void sso_identity_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SsoIdentity *sso_identity_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
SsoIdentity *sso_identity_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_SSO_IDENTITY_SKELETON (sso_identity_skeleton_get_type ())
#define SSO_IDENTITY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_SSO_IDENTITY_SKELETON, SsoIdentitySkeleton))
#define SSO_IDENTITY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_SSO_IDENTITY_SKELETON, SsoIdentitySkeletonClass))
#define SSO_IDENTITY_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_SSO_IDENTITY_SKELETON, SsoIdentitySkeletonClass))
#define IS_SSO_IDENTITY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_SSO_IDENTITY_SKELETON))
#define IS_SSO_IDENTITY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_SSO_IDENTITY_SKELETON))

typedef struct _SsoIdentitySkeleton SsoIdentitySkeleton;
typedef struct _SsoIdentitySkeletonClass SsoIdentitySkeletonClass;
typedef struct _SsoIdentitySkeletonPrivate SsoIdentitySkeletonPrivate;

struct _SsoIdentitySkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  SsoIdentitySkeletonPrivate *priv;
};

struct _SsoIdentitySkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType sso_identity_skeleton_get_type (void) G_GNUC_CONST;

SsoIdentity *sso_identity_skeleton_new (void);


G_END_DECLS

#endif /* __SSO_IDENTITY_GEN_H__ */
